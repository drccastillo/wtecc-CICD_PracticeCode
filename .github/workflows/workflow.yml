name: CI workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Machine-wide policy so all PS sessions can run scripts (requires admin on runner)
      - name: Allow PS scripts (machine-wide)
        shell: cmd
        run: >
          powershell -NoProfile -ExecutionPolicy Bypass -Command
          "Set-ExecutionPolicy -Scope LocalMachine -ExecutionPolicy RemoteSigned -Force;
           Get-ExecutionPolicy -List"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Echo username (GitHub var)
        shell: powershell
        run: echo "My user is ${{ vars.USERNAME }}!"

      # ‚ùóAvoid printing secrets; mask and only confirm presence
      - name: Mask and confirm secret is present
        shell: powershell
        run: |
          echo "::add-mask::${{ secrets.PASSWORD }}"
          if ("${{ secrets.PASSWORD }}".Length -gt 0) {
            echo "PASSWORD is set (length: $(${{ secrets.PASSWORD }}.Length))"
          } else {
            echo "PASSWORD is NOT set" ; exit 1
          }

      # Run your repo script normally now that policy is set
      - name: Run setup.ps1
        shell: powershell
        run: |
          $script = Join-Path $env:GITHUB_WORKSPACE 'setup.ps1'
          if (Test-Path $script) { & $script } else { Write-Error "setup.ps1 not found" }

      - name: Install dependencies
        shell: powershell
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        shell: powershell
        run: |
          flake8 service --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 service --count --max-complexity=10 --max-line-length=127 --statistics

      - name: Run unit tests with nose
        shell: powershell
        run: nosetests -v --with-spec --spec-color --with-coverage --cover-package=app
