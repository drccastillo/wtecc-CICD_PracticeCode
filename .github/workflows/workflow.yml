name: CI workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # âœ… Instala Python 3.11 portable (embeddable zip)
      - name: Provision portable Python 3.10
        shell: cmd
        run: |
          set PY310_URL=https://www.python.org/ftp/python/3.10.9/python-3.10.9-embed-amd64.zip
          set PY310_DIR=%RUNNER_TEMP%\py310
          set PY310_ZIP=%RUNNER_TEMP%\py310.zip

          echo Downloading embeddable Python...
          curl -L -o "%PY310_ZIP%" "%PY310_URL%"

          echo Extracting...
          powershell -NoProfile -ExecutionPolicy Bypass -Command "Expand-Archive -Path '%PY310_ZIP%' -DestinationPath '%PY310_DIR%' -Force"

          echo Enabling site module...
          echo import site>>"%PY310_DIR%\python310._pth"

          echo Bootstrapping pip...
          curl -L -o "%RUNNER_TEMP%\get-pip.py" https://bootstrap.pypa.io/get-pip.py
          "%PY310_DIR%\python.exe" "%RUNNER_TEMP%\get-pip.py"

          echo Adding Python to PATH...
          echo %PY310_DIR%>>%GITHUB_PATH%
          echo %PY310_DIR%\Scripts>>%GITHUB_PATH%

          echo Verifying installation...
          "%PY310_DIR%\python.exe" --version
          "%PY310_DIR%\python.exe" -m pip --version

      - name: Show Python in PATH
        shell: cmd
        run: |
          where python
          python --version
          pip --version

      - name: Echo username
        shell: cmd
        run: echo My user is ${{ vars.USERNAME }}!

      - name: Mask and confirm secret is present
        shell: cmd
        run: |
          echo ::add-mask::${{ secrets.PASSWORD }}
          if not "${{ secrets.PASSWORD }}"=="" (
            echo PASSWORD is set
          ) else (
            echo PASSWORD is NOT set && exit /b 1
          )

      - name: Install dependencies
        shell: cmd
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        shell: cmd
        run: |
          flake8 service --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 service --count --max-complexity=10 --max-line-length=127 --statistics

      - name: Run unit tests with nose
        shell: cmd
        run: nosetests -v --with-spec --spec-color --with-coverage --cover-package=app
